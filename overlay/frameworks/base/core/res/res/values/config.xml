<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2009 The Android Open Source Project
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate. -->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    
    <!-- True if the display hardware only has brightness buckets rather than a full range of
         backlight values -->
    <bool name="config_displayBrightnessBucketsInDoze">true</bool>

    <!-- Default screen brightness for VR setting. Target default value: 0x0BB for EVT1.1. -->
    <!-- 8 bit brightness level of 6 corresponds to the 10 bit brightness level of 0x0B6,
         8 bit brightness level of 7 corresponds to the 10 bit brightness level of 0x0C1 on EVT1.1. -->
    <integer name="config_screenBrightnessForVrSettingDefault">7</integer>
    <integer name="config_screenBrightnessForVrSettingMinimum">6</integer>
    <integer name="config_screenBrightnessForVrSettingMaximum">7</integer>

    <!-- The nominal white coordinates, in CIE1931 XYZ color space, for Display White Balance to
         use in its calculations. AWB will adapt this white point to the target ambient white
         point. The array must include a total of 3 float values (X, Y, Z) -->
    <string-array name="config_displayWhiteBalanceDisplayNominalWhite">
        <!-- Nominal White X --> <item>0.950352</item>
        <!-- Nominal White Y --> <item>1.0     </item>
        <!-- Nominal White Z --> <item>1.089366</item>
    </string-array>
    
    <!-- The maximum range of gamma adjustment possible using the screen
         auto-brightness adjustment setting. -->
    <fraction name="config_autoBrightnessAdjustmentMaxGamma">100%</fraction>
    
    <!-- User activity timeout: Maximum screen dim duration as a percentage of screen off timeout.
    
         This resource is similar to config_maximumScreenDimDuration but the maximum
         screen dim duration is defined as a ratio of the overall screen off timeout
         instead of as an absolute value in milliseconds.  This is useful for reducing
         the dim duration when the screen off timeout is very short.
    
         When computing the screen dim duration, the power manager uses the lesser
         of the effective durations expressed by config_maximumScreenDimDuration and
         config_maximumScreenDimRatio.
    
         This value must be between 0% and 100%.  If the value is zero, the screen will not
         dim before the device goes to sleep.
    -->
     <fraction name="config_maximumScreenDimRatio">29.999996%</fraction>

    <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">6</integer>
    <dimen name="config_screenBrightnessDimFloat">-2</dimen>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">15</integer>
    <dimen name="config_screenBrightnessDozeFloat">-2</dimen>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">90</integer>
    
    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">2</integer>
    
    <!-- Maximum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness above this level. -->
    <integer name="config_screenBrightnessSettingMaximum">255</integer>
    
    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">1000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">2000</integer>
    
     <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
     <bool name="config_automatic_brightness_available">true</bool>
     
     <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:
         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>4</item>
        <item>12</item>
        <item>20</item>
        <item>28</item>
        <item>47</item>
        <item>63</item>
        <item>86</item>
        <item>150</item>
        <item>160</item>
        <item>220</item>
        <item>270</item>
        <item>360</item>
        <item>420</item>
        <item>510</item>
        <item>620</item>
        <item>1000</item>
        <item>2000</item>
        <item>3100</item>
        <item>5000</item>
        <item>8000</item>
        <item>12000</item>
    </integer-array>

    <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.
         This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>5</item>
        <item>6</item>
        <item>7</item>
        <item>8</item>
        <item>9</item>
        <item>10</item>
        <item>11</item>
        <item>12</item>
        <item>13</item>
        <item>14</item>
        <item>15</item>
        <item>16</item>
        <item>17</item>
        <item>18</item>
        <item>19</item>
        <item>20</item>
        <item>21</item>
        <item>22</item>
        <item>23</item>
        <item>24</item>
        <item>25</item>
        <item>26</item>
        <item>30</item>
        <item>35</item>
        <item>40</item>
        <item>45</item>
        <item>50</item>
        <item>55</item>
        <item>60</item>
        <item>70</item>
        <item>100</item>
        <item>105</item>
        <item>110</item>
        <item>115</item>
        <item>120</item>
        <item>125</item>
        <item>130</item>
        <item>135</item>
        <item>140</item>
        <item>145</item>
        <item>150</item>
        <item>155</item>
        <item>160</item>
        <item>165</item>
        <item>170</item>
        <item>175</item>
        <item>180</item>
        <item>185</item>
        <item>190</item>
        <item>195</item>
        <item>200</item>
        <item>205</item>
        <item>210</item>
        <item>215</item>
        <item>220</item>
        <item>225</item>
        <item>230</item>
        <item>235</item>
        <item>240</item>
        <item>245</item>
        <item>250</item>
        <item>251</item>
        <item>252</item>
        <item>253</item>
        <item>254</item>
        <item>255</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisBrightLevels">
        <item>1000</item>
        <item>1000</item>
        <item>1000</item>
        <item>1000</item>
        <item>1000</item>
        <item>1500</item>
        <item>1500</item>
        <item>2000</item>
        <item>2000</item>
        <item>2000</item>
        <item>2000</item>
        <item>1500</item>
        <item>1500</item>
        <item>1000</item>
        <item>1000</item>
        <item>200</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisDarkLevels">
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>600</item>
        <item>600</item>
        <item>600</item>
        <item>600</item>
        <item>600</item>
        <item>600</item>
        <item>600</item>
        <item>600</item>
        <item>600</item>
        <item>500</item>
        <item>500</item>
        <item>200</item>
    </integer-array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
         values by calculating the index to use for lookup and then setting the constraint value
         to the corresponding value of the array. The new brightening hysteresis constraint value
         is the n-th element of config_dynamicHysteresisBrightLevels, and the new darkening
         hysteresis constraint value is the n-th element of config_dynamicHysteresisDarkLevels.
         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                      calculated index
         value < lux[0]                 0
         lux[n] <= value < lux[n+1]     n+1
         lux[MAX] <= value              MAX+1 -->
    <integer-array name="config_dynamicHysteresisLuxLevels">
        <item>1</item>
        <item>4</item>
        <item>12</item>
        <item>20</item>
        <item>40</item>
        <item>65</item>
        <item>95</item>
        <item>140</item>
        <item>200</item>
        <item>350</item>
        <item>650</item>
        <item>1300</item>
        <item>2000</item>
        <item>3300</item>
        <item>6000</item>
    </integer-array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.
         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>2.0482</item>
        <item>2.543</item>
        <item>3.0253</item>
        <item>3.5077</item>
        <item>4.0824</item>
        <item>4.4748</item>
        <item>5.08</item>
        <item>6.4233</item>
        <item>8.0848</item>
        <item>11.6607</item>
        <item>13.2347</item>
        <item>15.0676</item>
        <item>16.8302</item>
        <item>18.4261</item>
        <item>20.3103</item>
        <item>21.9042</item>
        <item>23.5456</item>
        <item>25.2137</item>
        <item>27.1769</item>
        <item>28.9571</item>
        <item>30.5244</item>
        <item>32.3535</item>
        <item>34.0867</item>
        <item>42.366</item>
        <item>51.1309</item>
        <item>59.52</item>
        <item>67.744</item>
        <item>75.9738</item>
        <item>84.6332</item>
        <item>94.1525</item>
        <item>102.2207</item>
        <item>110.4878</item>
        <item>117.0405</item>
        <item>124.3733</item>
        <item>130.9928</item>
        <item>140.4247</item>
        <item>149.3156</item>
        <item>157.1995</item>
        <item>165.3651</item>
        <item>173.2726</item>
        <item>181.4272</item>
        <item>189.1402</item>
        <item>197.5334</item>
        <item>205.6301</item>
        <item>213.9381</item>
        <item>222.2769</item>
        <item>230.0891</item>
        <item>238.6084</item>
        <item>246.5399</item>
        <item>255.6544</item>
        <item>263.6221</item>
        <item>271.9324</item>
        <item>279.1449</item>
        <item>288.5736</item>
        <item>297.6628</item>
        <item>306.1899</item>
        <item>314.4511</item>
        <item>322.1404</item>
        <item>330.969</item>
        <item>338.2251</item>
        <item>346.2251</item>
        <item>354.567</item>
        <item>370.799</item>
        <item>413.1738</item>
        <item>415.6397</item>
        <item>417.264</item>
        <item>419.264</item>
        <item>421.264</item>
        <item>424.646</item>
        <item>427.6287</item>
    </array>

    <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
         config_screenBrightnessMaximumNits, the display brightness is defined as the measured
         brightness of an all-white image.
         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined
         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->
        <array name="config_autoBrightnessDisplayValuesNits">
        <item>2.0487</item>
        <item>4.8394</item>
        <item>17.2619</item>
        <item>39.2619</item>
        <item>50.671</item>
        <item>72.95</item>
        <item>80.46</item>
        <item>84.38</item>
        <item>89.51</item>
        <item>100.34</item>
        <item>102.21</item>
        <item>109.48</item>
        <item>114.19</item>
        <item>123.86</item>
        <item>129.18</item>
        <item>138.07</item>
        <item>145.62</item>
        <item>168.84</item>
        <item>234.9</item>
        <item>291</item>
        <item>370</item>
        <item>492</item>
        <item>580</item>
    </array>
    
    <!-- Display has physical cutout -->
    <bool name="config_physicalDisplayCutout">true</bool>
    
	<!-- Whether the display cutout region of the main built-in display should be forced to
         black in software (to avoid aliasing or emulate a cutout that is not physically existent).
     -->    
    <string name="config_mainBuiltInDisplayCutout">M 0,0 H -23 V 80 H 23 V 0 H 0 Z</string>
     
    <!-- Height of the status bar in portrait -->
    <dimen name="status_bar_height_portrait">80px</dimen>

    <!-- Height of the status bar in landscape -->
    <dimen name="status_bar_height_landscape">24dp</dimen>

    <!-- Radius of the software rounded corners at the top of the display in its natural
        orientation. If zero, the value of rounded_corner_radius is used. -->
    <dimen name="rounded_corner_radius_top">106px</dimen>

    <!-- Radius of the software rounded corners at the bottom of the display in its natural
        orientation. If zero, the value of rounded_corner_radius is used. -->
    <dimen name="rounded_corner_radius_bottom">106px</dimen>
    
    <!-- The default peak refresh rate for a given device. Change this value if you want to allow
         for higher refresh rates to be automatically used out of the box -->
    <integer name="config_defaultPeakRefreshRate">120</integer>
    
     <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.
         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.
         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to autosuspend.h for details.
    -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

</resources>

